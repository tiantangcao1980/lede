#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: sweet-openWrt X86-64

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
      - name: 自定义插件/主题
        run: |
          cd package
          mkdir openwrt-packages
          cd openwrt-packages
          git clone https://github.com/openwrt-develop/luci-theme-atmaterial.git
          git clone https://github.com/rosywrt/luci-theme-rosy.git

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # ========================固件定制部分========================
          # 
          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #
          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 
          # 编译x64固件:
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_Generic=y
          EOF
          # 固件压缩:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF
          # 编译UEFI固件:
          cat >> .config <<EOF
          CONFIG_EFI_IMAGES=y
          EOF
          # IPv6支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          EOF
          # 多文件系统支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-fs-nfs=y
          CONFIG_PACKAGE_kmod-fs-nfs-common=y
          CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          CONFIG_PACKAGE_kmod-fs-ntfs=y
          CONFIG_PACKAGE_kmod-fs-squashfs=y
          EOF
          # USB3.0支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          EOF
          # 常用LuCI插件选择:
          CONFIG_PACKAGE_luci-app-accesscontrol=y #访问时间控制
          CONFIG_PACKAGE_luci-app-adbyby-plus=y #广告屏蔽大师Plus
          CONFIG_PACKAGE_luci-app-aria2=y #aria2下载
          CONFIG_PACKAGE_luci-app-arpbind=y #IP/MAC绑定
          CONFIG_PACKAGE_luci-app-autoreboot=y #高级重启
          CONFIG_PACKAGE_luci-app-aliddns=y #阿里DDNS客户端
          CONFIG_PACKAGE_luci-app-baidupcs-web=y #百度网盘客户端
          CONFIG_PACKAGE_luci-app-ddns=y #动态域名 DNS
          CONFIG_PACKAGE_luci-app-filetransfer=y #文件传输
          CONFIG_PACKAGE_luci-app-firewall=y #添加防火墙          
          CONFIG_PACKAGE_luci-app-docker=y #docker容器
          CONFIG_PACKAGE_luci-app-frpc=y #内网穿透 Frp
          CONFIG_PACKAGE_luci-app-kodexplorer=y #可道云存储
          CONFIG_PACKAGE_luci-app-mwan=y #MWAN负载均衡
          CONFIG_PACKAGE_luci-app-mwan3=y #MWAN3分流助手
          CONFIG_PACKAGE_luci-app-nlbwmon=y #网络带宽监视器
          CONFIG_PACKAGE_luci-app-vnstat=y #vnStat网络监控(图表)
          CONFIG_PACKAGE_luci-app-qbittorrent=y #qbittorrent bt下载
          CONFIG_PACKAGE_luci-app-ramfree=y #释放内存
          CONFIG_PACKAGE_luci-app-sfe=y #Turbo ACC网络加速(开启Fast Path转发加速)
          CONFIG_PACKAGE_luci-app-sqm=y #流量智能队列管理(QOS)
          CONFIG_PACKAGE_luci-app-S-S R-plus=y #S-S R兲朝上网Plus+
          CONFIG_PACKAGE_luci-app-S-S R-plus —> Include s-s New Versiong=y #新SS代理
          CONFIG_PACKAGE_luci-app-S-S R-plus —> Include V2ray=y #V2Ray透明代理
          CONFIG_PACKAGE_luci-app-S-S R-plus —> Include Kcptun=y #Kcptun代理
          CONFIG_PACKAGE_luci-app-S-S R-plus —> Include s-sR Server=y #S-S R客户端
          CONFIG_PACKAGE_luci-app-S-S R-plus —> Include s-sR Socks and Tunnel=y #S-S R代理
          CONFIG_PACKAGE_luci-app-syncdial=y #多拨虚拟网卡(原macvlan)
          CONFIG_PACKAGE_luci-app-upnp=y #通用即插即用UPnP(端口自动转发)
          CONFIG_PACKAGE_luci-app-usb-printer=y #USB 打印服务器
          CONFIG_PACKAGE_luci-app-p910nd=y #打印服务器模块
          CONFIG_PACKAGE_luci-app-vlmcsd=y #KMS服务器设置
          CONFIG_PACKAGE_luci-app-vsftpd=y #FTP服务器
          CONFIG_PACKAGE_luci-app-wol=y #WOL网络唤醒
          CONFIG_PACKAGE_luci-app-wrtbwmon=y #实时流量监测
          CONFIG_PACKAGE_luci-app-xlnetacc=y #迅雷快鸟
          CONFIG_PACKAGE_luci-app-ttyd=y #网页终端命令行
          CONFIG_PACKAGE_luci-app-zerotier=y #ZeroTier内网穿透
          CONFIG_PACKAGE_luci-app-dnscrypt-proxy=y #DNSCrypt解决DNS污染
          CONFIG_PACKAGE_Extra packages  --->  ipv6helper=y #支持 ipv6          
          EOF
          # LuCI主题:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_luci-theme-atmaterial=y
          CONFIG_PACKAGE_luci-theme-rosy=y
          EOF
          # 常用软件包:
          cat >> .config <<EOF
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_screen=y
          CONFIG_PACKAGE_tree=y
          CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_wget=y
          #EOF
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_PAD is not set
          # CONFIG_VMDK_IMAGES is not set
          EOF
          # 
          # ========================固件定制部分结束========================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          df -h
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./bin/targets/
